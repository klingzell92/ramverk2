extend layout.pug

block main
    div.main
        h1 Redovisningar
        h3 kmom01
        h4 Berätta utförligt om din syn på Express och Pug och hur de samverkar. Relatera till andra ramverk du jobbat med. Lyft fram de fördelar och eventuellt nackdelar du finner, eller bara notera skillnader och likheter.
        p.
            Jag kollade inte överdrivet mycket på andra ramverk eller templateengines utan valde att köra på med Express och Pug.
            Om man jämför Express med t.ex. Anax så känns det mycket mindre fast jag vet ännu inte vilket ramverk jag föredrar utav de två. En skilnad till är ju att man med Express inte bara kan göra en hemsida utan dessutom köra igång en server.
            Men annars så är det väldigt likt andra ramverk då det innehåller ungefär samma delar med routes och så samt att man kan ta hand om requests och responses.
            Pug är ett template språk som används för att skapa vyer till sidan. Man skrev sin html kod på ett liknande sett på ett liknande sätt i mithril men detta känns ändå bättre då det mer påminner om vanlig html.
            Jag hade nog föredragit att kunna skriva helt vanligt helt vanlig html i mina vyer men det gick snabbt att vänja sig vid syntaxen för pug så det kommer nog gå bra.


        h4 Berätta om din katalogstruktur och hur du organiserade din kod, hur tänkte du?
        p.
            Jag valde att scaffolda fram den strukturen som man får när man använder npm install express-generator -g. Jag ändrade inte någonting på den strukturen då jag tyckte att den fungerar på ett bra sätt och är liknande så som jag har haft det förut.
            Något som jag kanske kommer göra framöver är att flytta alla routes till egna filer just nu ligger alla i samma fil. Det kan nog vara bra när man skall ha olika typer av requests till en route.

        h4 Använde du någon form av scaffolding som Express erbjuder?
        p Ja jag använde som sagt npm install express-generator -g. Det var riktigt smidigt att kunna scaffolda fram en fungerande version på det sättet.

        h4 Jobbar du med Markdown för innehållet, eller annat liknande?
        p.
            Nej jag har valt att inte jobba med markdown. Jag tycker att Markdown är mycket krångligare än att jobba direkt med HTML.
            Nu jobbar jag ju inte direkt med HTML i det här fallet men jag föredrar nog pug över Markdown.
        h3 kmom02
        h4 Har du jobbat med Docker eller andra virtualiseringstekniker innan?
        p.
            Det här var första gången som jag jobbade med docker men jag har hört talas om det sedan tidigare. Jag har tidigare jobbat med Virtualbox som är lite liknande docker.
            Fast i virtualbox så skapar man ju ett helt operativsystem och det gör man ju inte riktigt i docker. Utan i docker skapar man containrar där man kan köra sin app i olika miljöer.

        h4 Hur ser du på möjligheterna att använda dig av Docker för att jobba med tester av ditt repo?
        p.
            Som jag nämnde tidigare så just möjligheten att kunna köra sitt repo i olika miljöer är nog bra för att testa sitt repo. Då kan man t.ex. testa sin kod i olika versioner utav Node eller PHP.
            Men jag vet inte riktigt hur detta skall fungera i praktiken utan jag behöver läsa på mer om docker. Utav det lilla som jag har använt mig av docker så känns det helt klart användbart.

        h4 Gick allt smidigt eller stötte du på problem?
        p.
            Jag stötte på en hel del problem när jag skulle installera docker. Först så tänkte jag använda mig utav docker toolbox då jag hade Windoes Home och det fungerade hyffsat men det verkade så mycket jobbigare än att bara köra med docker.
            Eftersom jag hade så mycket problem med docker toolbox så valde jag att uppgradera till Windows Education då vi ändå fick det gratis via skolan. Det löste de flesta problemen men jag hade fortfarande problem med att jag inte kunde komma åt filerna på servern.
            För att kunna göra det så var jag tvungen att stänga av brandväggen. Jag googlade efter en annan lösning på problemet men inget av det jag har hittat har fungerat för mig.
            Det fungerar dock inte när jag kör igång en container via docker run vilket är konstigt. Fast när jag kör igång via en docker-compose fil så fungerar det, för att klara uppgiften så var det ju bara det man behövde göra så för tillfället bryr jag mig inte så mycket om att det andra inte fungerar.
            Vad gäller uppgiften så gick det bra dels så hade vi ju php-delen klar då vi gjorde det i övningen. Sedan för Node hittade jag en bra guide för hur man skulle göra på github, men jag behövde ändra lite på den så det blev lite mer likt så som vi gjorde i övningen för att det skulle fungera.
            Det jag behövde ändra på var att istället för expose skriva port och sedan ange en port på det här sättet "8089:1337".

        h4 Skapade du din egen image, berätta om den?
        p Då jag lade så mycket tid på felsökning av olika problem så hann jag inte med att kolla på detta. Men det kanske jag kommer göra framöver någon gång.

        h3 kmom03
        h4 Berätta vilka tekniker/verktyg du valde för enhetstester och kodtäckning och varför?
        p.
            Jag kollade runt lite på olika verktyg för enhetstester främst kollade jag på Jasmine och Mocha som verkar vara de mest använda verktygen.
            Det blev Mocha till slut dels för att jag gillade deras guide om hur man använder det bättre. Jag valde att skriva mina asserts med expect.js biblioteket då jag kände att man kunde skriva fler typer av asserts med det än assert.
            För kodtäckning så använder jag nyc precis som i artikeln. På redovisningssidan så hade jag inte något att testa så jag skrev bara ett testfall för att visa att det fungerar.

        h4 Berätta om cin CI-kedja och reflektera över de valen du gjorde?
        p.
            Jag valde Travis för att kolla så att min sida byggs utan några fel. Sedan för kodkvalitet och kodtäckning så avnänder jag Scrutinizer som jag har använt tidigare och jag tycker att det fungerar bra.
            Jag hade lite problem med att få kodtäckningen för scrutinizer att fungera. Det jag behövde göra var att ladda upp coverage mappen för att scrutinizer skulle hitta clover.xml filen. Så min CI-kedja ser i stort sett ut som tidigare i Ramverk1-kursen.

        h4 Reflektera över hur det gick att integrera enhetstesterna i olika Docker-kontainerns och om du ser någon nytta med detta.
        p.
            Jag hade inga större problem med detta utan kunde följa hur man skulle göra i artikeln. Jag har tre olika docker images som jag använder node alpine, node 6-alpine och node 7-alpine.
            Sedan kör man igång dem med npm run test1, test2 eller test3. Nyttan med detta är ju att kan testa sin kod i olika miljöer och se till så att det fungerar för en specifik version utav t.ex. node.

        h4 Hur väl lyckades du utvärdera TDD-konceptet och vilka är dina reflektioner?
        p.
            Då jag knappt har börjat med min app och fortfarande är lite osäker på vad jag ska göra så har jag inte provat på TDD än. Men jag vet inte hur väl jag själv kommer att kunna använda mig utav den här metoden.
            Det känns svårt att utveckla på det sättet där man skriver tester som misslyckas och sedan skriver kod som gör att testerna går igenom. Fast det blir säkert lättare att tänka på det sättet ju mer man gör det.
            En fördel med det är väl att man får kod som är testbar redan från början.

        h4 Berätta om tankarna kring din klient/server applikation och nämn de tekniker du använder.
        p.
            Jag vill gärna göra något typ utav spel som min applikation. Men har ännu inte riktigt kommit på någonting som kan passa med tanke på vad som skall ingå med databas och webbsockets.
            Men jag har förberett själva repot med en CI-kedja och jag använder precis som i redovisa repot express som server och pug för att visa vyerna.
        h3 kmom04
        h4 Är du ny på realtidsprogrammering eller har du gjort liknande tidigare?
        p.
            Nej realtidsprogrammering var någonting nytt för mig och mig vetterligen har jag inte gjort något liknande vid ett tidigare tillfälle.
            Men jag tyckte att det var väldigt intressant och roligt, det känns också som något som man kommer att ha nytta utav att kunna framöver.

        h4 Hur gick det att jobba med konceptet realtidsprogrammering i webben, några reflektioner?
        p.
            Det gick bra, jag återanvände exemplet när jag skulle integrera chatten i min me-sida. Det tog ett tag att förstå allting som hände i koden men artikeln gav bra hjälp. Och sedan blev det mycket console.log för att se vad de olika delarna gjorde.
            Överlag så känns det intressant att jobba med realtidsprogrammering, det känns som att det finnns mycket man kan göra med det.


        h4 Berätta om din chatt som du integrerade i redovisa-sidan.
        p.
            Jag återanvände exemplet som fanns med en server som hanterar subprotokoll och byggde vidare på den. I och med det hade jag ju mycket på plats redan från början.
            Men det tog ett tag för mig att förstå allt som hände i koden och hur jag kunde ändra på den för att lägga till ny funktionalitet. Det var dock inga större problem att införa grundkraven.
            När man skall ansluta sig till chatten så anger man ett nickname. Sedan när man skickar meddelanden så ser man vem som har skickat det och när det skickades.
            Jag har JSON som applikationsprotokoll där jag skickar med nick från användaren, tid samt själva meddelandet.

        h4 Berätta om den realtidsfunktionalitet du väljer att integrera i din klient/server applikation.
        p.
            Jag är fortfarande osäker på vad jag ska göra för applikation så jag har inte kunnat integrera det än. Men jag har lagt till koden för chatten i repot.
            För jag tror ändå att jag kommer att använda någon typ utav chatt i min applikation. Men det kanske finns andra sätt att använda websockets på också som kan vara användbara.
        h3 kmom05
        h3 kmom06
        h3 kmom10
